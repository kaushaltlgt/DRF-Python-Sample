# Generated by Django 4.0 on 2022-03-10 05:53

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Nspusers',
            fields=[
                ('userid', models.FloatField(primary_key=True, serialize=False)),
                ('createdon', models.DateTimeField(blank=True, null=True)),
                ('createdby', models.FloatField(blank=True, null=True)),
                ('updatedon', models.DateTimeField(blank=True, null=True)),
                ('updatedby', models.FloatField(blank=True, null=True)),
                ('jobtype', models.FloatField(blank=True, null=True)),
                ('warehouseid', models.CharField(blank=True, max_length=15, null=True)),
                ('nspstatus', models.FloatField(blank=True, null=True)),
                ('iscallagent', models.BooleanField(blank=True, null=True)),
                ('iscalltech', models.BooleanField(blank=True, null=True)),
                ('isfieldtech', models.BooleanField(blank=True, null=True)),
                ('isleadtech', models.BooleanField(blank=True, null=True)),
                ('isclaimagent', models.BooleanField(blank=True, null=True)),
                ('ismanager', models.BooleanField(blank=True, null=True)),
                ('isfst', models.BooleanField(blank=True, null=True)),
                ('isdis', models.BooleanField(blank=True, null=True)),
                ('iswarehouse', models.BooleanField(blank=True, null=True)),
                ('userstatus', models.FloatField(blank=True, null=True)),
                ('statusdtime', models.DateField(blank=True, null=True)),
                ('refrigeratorlevel', models.CharField(blank=True, max_length=15, null=True)),
                ('sealsystemlevel', models.CharField(blank=True, max_length=15, null=True)),
                ('washerlevel', models.CharField(blank=True, max_length=15, null=True)),
                ('dryerlevel', models.CharField(blank=True, max_length=15, null=True)),
                ('ovenlevel', models.CharField(blank=True, max_length=15, null=True)),
                ('dishwasherlevel', models.CharField(blank=True, max_length=15, null=True)),
                ('otrlevel', models.CharField(blank=True, max_length=15, null=True)),
                ('dlptvlevel', models.CharField(blank=True, max_length=15, null=True)),
                ('lcdtvlevel', models.CharField(blank=True, max_length=15, null=True)),
                ('ledtvlevel', models.CharField(blank=True, max_length=15, null=True)),
                ('origlocation', models.CharField(blank=True, max_length=15, null=True)),
                ('curlocation', models.CharField(blank=True, max_length=15, null=True)),
                ('totallevel', models.CharField(blank=True, max_length=15, null=True)),
                ('pictureid', models.FloatField(blank=True, null=True)),
                ('init', models.CharField(blank=True, max_length=2, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('firstname', models.CharField(blank=True, max_length=50, null=True)),
                ('lastname', models.CharField(blank=True, max_length=50, null=True)),
                ('currentticketno', models.CharField(blank=True, max_length=30, null=True)),
                ('samsungid', models.CharField(blank=True, max_length=30, null=True)),
                ('iscompany', models.FloatField(blank=True, null=True)),
                ('companyid', models.FloatField(blank=True, null=True)),
                ('ismngrtech', models.BooleanField(blank=True, null=True)),
                ('isremoteagent', models.FloatField(blank=True, null=True)),
                ('engineercode', models.CharField(blank=True, max_length=30, null=True)),
                ('islocationmanager', models.FloatField(blank=True, null=True)),
                ('issupervisor', models.FloatField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('isnsc', models.BooleanField(blank=True, null=True)),
                ('tel', models.CharField(blank=True, max_length=25, null=True)),
                ('techtierid', models.FloatField(blank=True, null=True)),
                ('isnscmanager', models.BooleanField(blank=True, null=True)),
                ('isslotmanager', models.BooleanField(blank=True, null=True)),
                ('isregionalmanager', models.BooleanField(blank=True, null=True)),
                ('techskillflags', models.FloatField(blank=True, null=True)),
                ('endzipcode', models.CharField(blank=True, max_length=5, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('remember_token', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'nspusers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OauthAccessTokens',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(null=True)),
                ('client_id', models.IntegerField(null=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('scopes', models.CharField(max_length=1000, null=True)),
                ('revoked', models.IntegerField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('expires_at', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'oauth_access_tokens',
                'managed': False,
            },
        ),
    ]
